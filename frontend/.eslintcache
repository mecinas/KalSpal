[{"D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\index.js":"1","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\App.js":"2","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\redux\\store.js":"3","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\redux\\actions.js":"4","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\Footer.jsx":"5","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\Home.jsx":"6","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\workouts\\Workouts.jsx":"7","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\PrivateRoute.jsx":"8","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\CreateUser.jsx":"9","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\DefaultNavbar.jsx":"10","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\RedirectAfterLogin.jsx":"11","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\Dashboard.jsx":"12","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\User.jsx":"13","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\account\\Account.jsx":"14","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\redux\\reducer.js":"15","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\BenefitCard.jsx":"16","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\Login.jsx":"17","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\Avatar.jsx":"18","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\account\\AccountAvatar.jsx":"19","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\workouts\\Workout.jsx":"20","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\workouts\\WorkoutListItem.jsx":"21","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\Post.jsx":"22","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\account\\AccountInfoTable.jsx":"23","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\hooks\\useConnection.jsx":"24","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\account\\AccountEdit.jsx":"25","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\Map.jsx":"26","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\hooks\\useScript.jsx":"27","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\FindWorkout.jsx":"28"},{"size":688,"mtime":1620834955263,"results":"29","hashOfConfig":"30"},{"size":2954,"mtime":1623488217266,"results":"31","hashOfConfig":"30"},{"size":654,"mtime":1623503585848,"results":"32","hashOfConfig":"30"},{"size":15645,"mtime":1623503585263,"results":"33","hashOfConfig":"30"},{"size":375,"mtime":1622545091976,"results":"34","hashOfConfig":"30"},{"size":940,"mtime":1622545091977,"results":"35","hashOfConfig":"30"},{"size":1551,"mtime":1622613345701,"results":"36","hashOfConfig":"30"},{"size":779,"mtime":1620904046869,"results":"37","hashOfConfig":"30"},{"size":3006,"mtime":1623485771223,"results":"38","hashOfConfig":"30"},{"size":8431,"mtime":1623488048290,"results":"39","hashOfConfig":"30"},{"size":1122,"mtime":1623485771239,"results":"40","hashOfConfig":"30"},{"size":9562,"mtime":1623504860677,"results":"41","hashOfConfig":"30"},{"size":4979,"mtime":1623485771239,"results":"42","hashOfConfig":"30"},{"size":1001,"mtime":1623485771254,"results":"43","hashOfConfig":"30"},{"size":2187,"mtime":1623503584715,"results":"44","hashOfConfig":"30"},{"size":435,"mtime":1622545091941,"results":"45","hashOfConfig":"30"},{"size":1675,"mtime":1622545091977,"results":"46","hashOfConfig":"30"},{"size":456,"mtime":1622565653263,"results":"47","hashOfConfig":"30"},{"size":1929,"mtime":1622565062491,"results":"48","hashOfConfig":"30"},{"size":396,"mtime":1623485771256,"results":"49","hashOfConfig":"30"},{"size":2429,"mtime":1623485771257,"results":"50","hashOfConfig":"30"},{"size":6390,"mtime":1623487618584,"results":"51","hashOfConfig":"30"},{"size":5215,"mtime":1623485771255,"results":"52","hashOfConfig":"30"},{"size":0,"mtime":1623485771278,"results":"53","hashOfConfig":"30"},{"size":1311,"mtime":1622545091980,"results":"54","hashOfConfig":"30"},{"size":5382,"mtime":1623485771228,"results":"55","hashOfConfig":"30"},{"size":2476,"mtime":1622545091997,"results":"56","hashOfConfig":"30"},{"size":7014,"mtime":1623495484247,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"8owv5m",{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"60"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"60"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"60"},"D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\index.js",[],["130","131"],"D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\App.js",["132","133"],"import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport { useState, useEffect } from 'react'\r\nimport { connect } from \"react-redux\"\r\n\r\nimport Home from './components/Home'\r\nimport CreateUser from './components/CreateUser'\r\nimport DefaultNavbar from './components/DefaultNavbar'\r\nimport Footer from \"./components/Footer\"\r\nimport Dashboard from \"./components/Dashboard\"\r\nimport RedirectAfterLogin from \"./components/RedirectAfterLogin\"\r\nimport Account from \"./components/account/Account\"\r\nimport Workouts from './components/workouts/Workouts'\r\nimport User from \"./components/User\"\r\nimport { useAuth0 } from '@auth0/auth0-react'\r\nimport PrivateRoute from './components/PrivateRoute'\r\nimport { setAccessToken, setIsLoggedIn } from './redux/actions'\r\nimport './styles/Avatar.css'\r\n\r\n//TODOS\r\n//ZarzÄ…dzanie znajomymi\r\n\r\nfunction App(props) {\r\n  const [isLogged] = useState(localStorage.getItem(\"isLogged\"))\r\n  const { isAuthenticated, isLoading, getAccessTokenSilently } = useAuth0()\r\n\r\n  useEffect(() => {\r\n    if (!isLoading && isAuthenticated) {\r\n      props.dispatch(setIsLoggedIn(true))\r\n      localStorage.setItem('isLogged', true)\r\n      async function makeRequest() {\r\n        let acctoken = await getAccessTokenSilently({\r\n          audience: 'https://kal-spal-dev.com'\r\n        });\r\n        if (acctoken !== props.accesstoken) {\r\n          props.dispatch(setAccessToken(acctoken))\r\n        }\r\n      }\r\n      makeRequest();\r\n    }\r\n    else if (!isLoading && !isAuthenticated) {\r\n      props.dispatch(setIsLoggedIn(false))\r\n      localStorage.setItem('isLogged', false)\r\n      props.dispatch(setAccessToken(undefined))\r\n    }\r\n  }, [isLoading, isAuthenticated]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <DefaultNavbar isLogged={isLogged} />\r\n        {props.errors.map((e, idx) => (\r\n          <div class=\"alert alert-danger display-none\" role=\"alert\">\r\n            {e}\r\n          </div>\r\n        ))}\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n\r\n          <Route path=\"/createUser\" >\r\n            <CreateUser />\r\n          </Route>\r\n\r\n          <PrivateRoute path=\"/dashboard\" component={Dashboard}>\r\n          </PrivateRoute>\r\n\r\n          <Route path=\"/redirectAfterLogin\">\r\n            <RedirectAfterLogin />\r\n          </Route>\r\n\r\n          <PrivateRoute path=\"/account\" component={Account}>\r\n          </PrivateRoute>\r\n\r\n          <PrivateRoute path=\"/user/:userid\" component={User}>\r\n          </PrivateRoute>\r\n\r\n          <PrivateRoute path=\"/workouts\" component={Workouts}>\r\n          </PrivateRoute>\r\n        </Switch>\r\n      </Router>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return state;\r\n}\r\n\r\nexport default App = connect(mapStateToProps)(App);\r\n","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\redux\\store.js",[],"D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\redux\\actions.js",[],"D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\Footer.jsx",["134"],"import React from 'react'\r\n\r\nimport \"../styles/Footer.css\"\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <div>\r\n      <div className=\"space\"></div>\r\n      <div className=\"footerStyle\" >\r\n        <h5 className=\"footer-text\"><a className=\"footer-link\" href=\"https://github.com/mecinas/KalSpal\" target=\"_blank\">Repozytorium</a></h5>\r\n        </div>\r\n    </div>\r\n  );\r\n}","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\Home.jsx",[],"D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\workouts\\Workouts.jsx",["135","136"],"import { useEffect } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { ListGroup, Row, Col, Tab, Container } from 'react-bootstrap'\r\nimport { getWorkouts } from '../../redux/actions'\r\nimport WorkoutListItem from './WorkoutListItem';\r\nimport Workout from './Workout';\r\n\r\nfunction Workouts(props) {\r\n    useEffect(() => {\r\n        if (props.accesstoken !== undefined) {\r\n            props.dispatch(getWorkouts(props.accesstoken));\r\n        }\r\n    }, [props.accesstoken]);\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Tab.Container>\r\n                <Row>\r\n                    <Col className=\"col-4\">\r\n                        <ListGroup>\r\n                            {props.workouts.map((workout, idx) => (\r\n                                <WorkoutListItem key={idx} workout={workout} />\r\n                            ))}\r\n                        </ListGroup>\r\n                    </Col>\r\n                    <Col >\r\n                        <Tab.Content>\r\n                            {props.workouts.map((workout, idx) => (\r\n                                <Tab.Pane key={idx} eventKey={`#${workout.id}`}>\r\n                                    <Workout workout={workout} />\r\n                                </Tab.Pane>\r\n                            ))}\r\n                        </Tab.Content>\r\n                    </Col>\r\n                </Row>\r\n            </Tab.Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return state;\r\n}\r\n\r\nexport default Workouts = connect(mapStateToProps)(Workouts);\r\n","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\PrivateRoute.jsx",[],"D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\CreateUser.jsx",["137"],"import React, { useState } from \"react\";\r\nimport { Form, Button, Jumbotron, Container } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useAuth0 } from '@auth0/auth0-react'\r\nimport {createUser} from '../redux/actions'\r\nimport {connect} from 'react-redux'\r\nimport {cleanRegistered} from '../redux/actions'\r\n\r\nimport '../styles/CreateUser.css'\r\n\r\nfunction CreateUser(props) {\r\n    const { user } = useAuth0();\r\n\r\n    const [doesRedirect, setDoesRedirect] = useState(false);\r\n\r\n    const onFormSubmit = e => {\r\n        e.preventDefault()\r\n        var formData = new FormData(e.target)\r\n        formData = Object.fromEntries(formData.entries())\r\n        formData[\"email\"] = user.email\r\n        props.dispatch(createUser(props.accesstoken, formData))\r\n        setTimeout(() => {\r\n            props.dispatch(cleanRegistered())\r\n            setDoesRedirect(true);\r\n        }, 2000)\r\n    }\r\n\r\n    if (doesRedirect)\r\n        return <Redirect to=\"/redirectAfterLogin\" />\r\n    else\r\n        return (\r\n            <Container onSubmit={onFormSubmit}>\r\n                <Jumbotron className=\"greeting-jumbo\">\r\n                    <h1 className=\"greeting-title\">Witaj na naszej platformie!</h1>\r\n                    <h5>\r\n                        Twoje konto nie zostaÅ‚o utworzone, aby skorzystaÄ‡ z peÅ‚ni moÅ¼liwoÅ›ci KalSpal wypeÅ‚nij poniÅ¼szy formularz\r\n                </h5>\r\n\r\n                    <Button className=\"info-btn\" variant=\"primary\">Dowiedz siÄ™ wiÄ™cej o korzyÅ›ciach korzystania z KalSpal</Button>\r\n                </Jumbotron>\r\n\r\n                <Form>\r\n                    <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Control required type=\"text\" name='firstName' placeholder=\"WprowadÅº ImiÄ™\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicSurname\">\r\n                        <Form.Control required type=\"text\" name='lastName' placeholder=\"WprowadÅº nazwisko\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicDate\">\r\n                        <Form.Label>Data urodzin</Form.Label>\r\n                        <Form.Control required type=\"date\" name='birthDate' />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"checkbox-group\" controlId=\"formBasicCheckbox\">\r\n                        <Form.Check required type=\"checkbox\" />\r\n                        <Form.Label>Potwierdzam zapoznanie z <a href=\"/createUser\">Regulaminem</a></Form.Label>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"btn-group\">\r\n                        <Button className=\"submit-btn\" variant=\"warning\" type=\"submit\">\r\n                            PrzeÅ›lij\r\n                        </Button>\r\n                    </Form.Group>\r\n\r\n                </Form>\r\n\r\n            </Container>\r\n        )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return state;\r\n}\r\n\r\nexport default CreateUser = connect(mapStateToProps)(CreateUser);\r\n","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\DefaultNavbar.jsx",["138","139","140","141"],"import React, { useState, useEffect } from 'react'\r\nimport { Navbar, Nav, Button, Image, Dropdown } from 'react-bootstrap'\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { getAllUsers, getNotifications, respondInvitation, deleteChallenge } from '../redux/actions'\r\nimport logo from '../resources/company_logo.png'\r\nimport \"../styles/DefaultNavbar.css\"\r\n\r\nfunction DefaultNavbar(props) {\r\n    const { logout } = useAuth0();\r\n    const history = useHistory();\r\n    const [selected, setSelected] = useState([]);\r\n    const [options, setOptions] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (selected.length > 0) {\r\n            history.push(\"/user/\" + selected[0].id)\r\n        }\r\n    }, [selected])\r\n\r\n    useEffect(() => {\r\n        if (props.registered === \"Registered\" && props.accesstoken) {\r\n            props.dispatch(getAllUsers(props.accesstoken))\r\n            props.dispatch(getNotifications(props.accesstoken))\r\n        }\r\n    }, [props.accesstoken, props.registered])\r\n\r\n    useEffect(() => {\r\n        if (props.allusers !== undefined) {\r\n            var array_of_names = []\r\n            props.allusers.map((user) => {\r\n                array_of_names.push({ label: user.firstName + \" \" + user.lastName, id: user.id })\r\n            })\r\n            setOptions(array_of_names)\r\n        }\r\n    }, [props.allusers])\r\n\r\n    const LogoutButton = () => {\r\n        return (\r\n            <Button variant=\"outline-success\" onClick={orderLogout}>\r\n                Wyloguj\r\n            </Button>\r\n        );\r\n    };\r\n\r\n    const orderLogout = () => {\r\n        sessionStorage.removeItem('isRegistered')\r\n        logout({ returnTo: window.location.origin })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar bg=\"warning\" className=\"mb-3\">\r\n                <Navbar.Brand>\r\n                    <Image src={logo} className=\"logo-img\" />\r\n                </Navbar.Brand>\r\n\r\n                <Nav className=\"ml-auto\">\r\n                    {props.registered !== \"Registered\" &&\r\n                        <Button className=\"btn-navbar\" variant=\"outline-success\" href=\"/\">Dowiedz siÄ™ wiÄ™cej o nas</Button>\r\n                    }\r\n                    {props.registered === \"Registered\" &&\r\n                        <div className=\"d-flex\">\r\n                            <div className=\"mr-4\">\r\n                                <Typeahead\r\n                                    id=\"basic-example\"\r\n                                    onChange={setSelected}\r\n                                    options={options}\r\n                                    placeholder=\"ZnajdÅº znajomych...\"\r\n                                    selected={selected}\r\n                                />\r\n                            </div>\r\n                            <Dropdown>\r\n                                <Dropdown.Toggle className=\"btn mr-4\" variant=\"outline-success\" id=\"dropdown-basic\">\r\n                                    Powiadomienia\r\n                                </Dropdown.Toggle>\r\n\r\n                                <Dropdown.Menu>\r\n                                    {props.notifications.map((value, idx) => (\r\n\r\n                                        value.text ? (\r\n                                            <Dropdown.Item key={idx}>\r\n                                                <div className=\"card my-2\" >\r\n                                                    <div className=\"card-body\">\r\n                                                        <div class=\"card-header\">\r\n                                                            UÅ¼ytkownik {value.invitationAuthor.firstName} {value.invitationAuthor.lastName} rzuciÅ‚ ci wyzwanie\r\n                                                        </div>\r\n                                                        <p className=\"card-text mx-4 my-2\">\r\n                                                            {value.text.split(\",\")[0] + \",\"}\r\n                                                            <br />\r\n                                                            {value.text.split(\",\")[1]}\r\n                                                        </p>\r\n                                                        <Button className=\"mx-4\" variant=\"secondary\"\r\n                                                            onClick={() => props.dispatch(deleteChallenge(props.accesstoken, value.id))}>\r\n                                                            UsuÅ„\r\n                                                        </Button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Dropdown.Item>\r\n                                        ) : (\r\n                                            <Dropdown.Item key={idx}>\r\n                                                <div className=\"card my-2\">\r\n                                                    <div className=\"card-body\">\r\n                                                        <div className=\"card-header\">\r\n                                                            UÅ¼ytkownik {value.invitationAuthor.firstName} {value.invitationAuthor.lastName} zaprosiÅ‚ ciÄ™ do znajomych\r\n                                                        </div>\r\n                                                        <Button className=\"ml-4 mr-2 mt-2\" variant=\"success\"\r\n                                                            onClick={() => props.dispatch(respondInvitation(props.accesstoken, value.id, \"accept\"))}>\r\n                                                            PotwierdÅº\r\n                                                        </Button>\r\n                                                        <Button className=\"mx-2 mt-2\" variant=\"secondary\"\r\n                                                            onClick={() => props.dispatch(respondInvitation(props.accesstoken, value.id, \"reject\"))}>\r\n                                                            OdrzuÄ‡\r\n                                                        </Button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Dropdown.Item>\r\n                                        )\r\n\r\n                                    ))}\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                            <Button className=\"btn mr-4\" variant=\"outline-success\" href=\"/dashboard\">Tablica</Button>\r\n                            <Button className=\"btn mr-4\" variant=\"outline-success\" href=\"/workouts\">Treningi</Button>\r\n                            <Button className=\"btn mr-4\" variant=\"outline-success\" href=\"/findworkout\">Podpowiedz trasÄ™</Button>\r\n                            <Button className=\"btn mr-4\" variant=\"outline-success\" href=\"/account\">Moje konto</Button>\r\n                            {/* {props.friends.map((e, idx) => (\r\n                                    <ListGroup.Item key={idx} className=\"container-fluid\">\r\n                                        <Row>\r\n                                            <Col sm={2} className=\"pl-1 pr-1\"><Avatar sauce={e.avatarURL} /></Col>\r\n                                            <Col sm={6} className=\"d-flex justify-content-center align-self-center\" onClick={() => friendClicked(e.id)}>{e.firstName} {e.lastName}</Col>\r\n                                            <Col sm={2} className=\"d-flex justify-content-center\"><Button variant=\"none\" onClick={() => challangeClicked(e)}><BsTrophy /></Button></Col>\r\n                                            <Col sm={2} className=\"d-flex justify-content-center\"><Button variant=\"none\" onClick={() => meetingClicked(e)} ><BsCalendar /></Button></Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                ))} */}\r\n                            <LogoutButton />\r\n                        </div>\r\n                    }\r\n                </Nav>\r\n\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return state;\r\n}\r\n\r\nexport default DefaultNavbar = connect(mapStateToProps)(DefaultNavbar);","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\RedirectAfterLogin.jsx",["142","143","144"],"import React, { useState, useEffect } from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport {checkIfUserIsRegisetred} from '../redux/actions'\r\nimport { useCheckAvailAccount } from '../hooks/useConnection'\r\n\r\n//Error z dupy z checkIfRegistered\r\n\r\nfunction RedirectAfterLogin(props) {\r\n    const [redirection, setRedirection] = useState(null);\r\n    \r\n\r\n    useEffect(() => {\r\n        if (props.accesstoken) {\r\n            props.dispatch(checkIfUserIsRegisetred(props.accesstoken))\r\n        }\r\n    }, [props.accesstoken])\r\n\r\n    useEffect(() => {\r\n        if (props.registered) {\r\n            if (props.registered === \"Registered\") {\r\n                sessionStorage.setItem('isRegistered',\"Registered\")\r\n                setRedirection(<Redirect to='/dashboard' />)\r\n            }\r\n            else\r\n                setRedirection(<Redirect to='/createUser' />)\r\n        }\r\n    }, [props.registered])\r\n    return redirection\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return state;\r\n}\r\n\r\nexport default RedirectAfterLogin = connect(mapStateToProps)(RedirectAfterLogin);\r\n","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\Dashboard.jsx",["145","146","147","148","149"],"D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\User.jsx",["150","151","152","153"],"import React, { useEffect } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, Container, Button, Card } from 'react-bootstrap'\r\nimport Post from './Post'\r\nimport Avatar from './Avatar'\r\nimport { getUserById, getUserPosts, getUser, addFriend, getFriends } from '../redux/actions'\r\n\r\nimport placeholder from \"../resources/placeholder-1.png\"\r\n\r\nfunction User(props) {\r\n\r\n    useEffect(() => {\r\n        let user = props.match.params.userid;\r\n        if (props.accesstoken !== undefined) {\r\n            props.dispatch(getUser(props.accesstoken));\r\n            props.dispatch(getUserById(props.accesstoken, user));\r\n            props.dispatch(getUserPosts(props.accesstoken, user));\r\n            props.dispatch(getFriends(props.accesstoken));\r\n        }\r\n    }, [props.accesstoken]);\r\n\r\n    function isFriend() {\r\n        return props.friends.findIndex(e => e.id === props.selecteduser.id) != -1;\r\n    }\r\n\r\n    function isMe() {\r\n        if(!props.selecteduser || !props.user) {\r\n            return false;\r\n        }\r\n        return props.selecteduser.id === props.user.id;\r\n    }\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row className=\"justify-content-center\">\r\n                <Col xl={3}>\r\n                    <Card>\r\n                        <Card.Header>Podsumowanie</Card.Header>\r\n                        <Card.Body className=\"px-2 pt-4\">\r\n                            {props.selecteduser &&\r\n                                <>\r\n                                    <div className=\"row justify-content-center\">\r\n                                        <div className=\"col-8\">\r\n                                            <Avatar sauce={props.selecteduser.avatarURL} /> <br />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <table className=\"table\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <th scope=\"row\">ImiÄ™ i nazwisko</th>\r\n                                                <td>{props.selecteduser.firstName} {props.selecteduser.lastName}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th scope=\"row\">Data urodzenia</th>\r\n                                                <td>{props.selecteduser.birthDate}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th scope=\"row\">Email</th>\r\n                                                <td>{props.selecteduser.email}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th colSpan=\"2\">\r\n                                                    {\r\n                                                        !isMe() && (isFriend() ? (\r\n                                                            <Button className=\"mt-2\" variant=\"primary\" disabled>JesteÅ›cie znajomymi</Button>\r\n                                                        ) : (\r\n                                                            <Button \r\n                                                                className=\"mt-2\"\r\n                                                                variant=\"primary\"\r\n                                                                onClick={(e) => props.dispatch(addFriend(props.accesstoken, props.selecteduser.id))}//Nie zmieniaÄ‡!\r\n                                                            >ZaproÅ› do znajomych</Button>\r\n                                                        ))\r\n\r\n                                                    }\r\n                                                </th>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </>\r\n                            }\r\n                        </Card.Body>\r\n                    </Card>\r\n\r\n                </Col >\r\n                <Col xl={6}>\r\n                    <Card>\r\n                        <Card.Header>Tablica</Card.Header>\r\n                        <Card.Body >\r\n                            <div >\r\n                                {props.posts.map((e, idx) => (\r\n                                    <div key={idx} className=\"mb-3\">\r\n                                        <Post post={e} home={false}></Post>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return state;\r\n}\r\n\r\nexport default User = connect(mapStateToProps)(User);\r\n","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\account\\Account.jsx",["154","155"],"import React, { useEffect } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { getUser } from '../../redux/actions'\r\nimport { Container, Row } from \"react-bootstrap\"\r\n\r\nimport '../../styles/account/Account.css';\r\n\r\nimport AccountInfoTable from './AccountInfoTable'\r\nimport AccountAvatar from './AccountAvatar'\r\n\r\nfunction Account(props) {\r\n\r\n    useEffect(() => {\r\n        if (props.accesstoken !== undefined) {\r\n            props.dispatch(getUser(props.accesstoken));\r\n        }\r\n    }, [props.accesstoken]);\r\n\r\n    return (\r\n        <Container className=\"account_container\">\r\n            <Row>\r\n                <AccountAvatar />\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n                {props.user &&\r\n                    <AccountInfoTable user={props.user} />\r\n                }\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return state;\r\n}\r\n\r\nexport default Account = connect(mapStateToProps)(Account);","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\redux\\reducer.js",[],"D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\BenefitCard.jsx",[],"D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\Login.jsx",[],"D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\Avatar.jsx",[],"D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\account\\AccountAvatar.jsx",["156","157"],"import React, { useState, useEffect } from 'react'\r\nimport { Col, Image, Button } from 'react-bootstrap'\r\nimport { Pencil } from 'react-bootstrap-icons'\r\nimport {connect} from 'react-redux'\r\nimport {addAvatar, getUser} from '../../redux/actions'\r\n\r\nimport '../../styles/account/AccountAvatar.css'\r\nimport placeholder from \"../../resources/placeholder-1.png\"\r\n\r\nfunction AccountAvatar(props) {\r\n    const [source, setSource] = useState({ source: null })\r\n\r\n    const hiddenFileInput = React.useRef(null);\r\n    const handleFileInputClick = e => {\r\n        hiddenFileInput.current.click();\r\n    }\r\n    const handleFileInputChange = e => {\r\n        const photoUploaded = e.target.files[0];\r\n        const data = new FormData();\r\n        data.append('file', photoUploaded)\r\n        props.dispatch(addAvatar(props.accesstoken, data))\r\n        setTimeout(() => {\r\n            props.dispatch(getUser(props.accesstoken))\r\n        }, 1000)\r\n    }\r\n\r\n    const getAvatar = () => {\r\n        if(props.user !== undefined)\r\n            if(props.user.avatarURL === null)\r\n                setSource(placeholder)\r\n            else\r\n                setSource(props.user.avatarURL)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAvatar()\r\n    }, [props.user])\r\n\r\n    return (\r\n        <Col className=\"account_avatar_col\">\r\n            <Image className=\"avatar_img\" src={source} />\r\n            <Button className=\"pencil_ico\" variant=\"light\" onClick={handleFileInputClick}>\r\n                <Pencil color=\"brown\" size={20} />\r\n                <input\r\n                    type=\"file\"\r\n                    ref={hiddenFileInput}\r\n                    onChange={handleFileInputChange}\r\n                    name=\"myImage\"\r\n                    style={{ display: 'none' }} />\r\n            </Button>\r\n        </Col>\r\n    )\r\n}\r\n\r\nfunction mapStoreToProps(state){\r\n    return state\r\n}\r\n\r\nexport default AccountAvatar = connect(mapStoreToProps)(AccountAvatar)\r\n\r\n\r\n","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\workouts\\Workout.jsx",[],"D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\workouts\\WorkoutListItem.jsx",["158"],"import { ListGroup } from 'react-bootstrap'\r\nimport { GrBike } from 'react-icons/gr'\r\nimport { FaRunning } from 'react-icons/fa'\r\nimport { ImBin } from 'react-icons/im'\r\nimport { Modal, Button } from 'react-bootstrap'\r\nimport { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { deleteWorkout, getWorkouts } from '../../redux/actions'\r\n\r\nfunction WorkoutListItem({ state, dispatch, workout }) {\r\n\r\n    function getIcon(type) {\r\n        if (type === \"ride\") return <GrBike />;\r\n        else if (type === \"run\") return <FaRunning />;\r\n        else return \" \";\r\n    }\r\n\r\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n\r\n    function deleteThisWorkout() {\r\n        dispatch(deleteWorkout(state.accesstoken, workout.id));\r\n\r\n        setTimeout(() => {\r\n            dispatch(getWorkouts(state.accesstoken));\r\n        }, 1000)\r\n\r\n        setShowDeleteModal(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ListGroup.Item action href={`#${workout.id}`} className=\"list-group-item list-group-item-action flex-column align-items-start\">\r\n                <div className=\"d-flex w-100 justify-content-between\">\r\n                    <h5 className=\"mb-1\">{getIcon(workout.type)} {workout.name}</h5>\r\n                    <small>{workout.startTime.split(\".\")[0]} <ImBin color=\"red\" size=\"20px\" onClick={() => setShowDeleteModal(true)} /></small>\r\n                </div>\r\n            </ListGroup.Item>\r\n\r\n            <Modal show={showDeleteModal} onHide={() => setShowDeleteModal(false)}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Czy na pewno chcesz usunÄ…Ä‡ trening? </Modal.Title>\r\n                </Modal.Header>\r\n                <div>\r\n                    <Modal.Body>\r\n                        Trening '{workout.name}' zostanie bezpowrotnie usuniÄ™ty.\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => setShowDeleteModal(false)}>Anuluj</Button>\r\n                        <Button variant=\"primary\" onClick={deleteThisWorkout}>Tak</Button>\r\n                    </Modal.Footer>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    return { state: state, workout: ownProps.workout, rerender: ownProps.rerender };\r\n}\r\n\r\nexport default WorkoutListItem = connect(mapStateToProps)(WorkoutListItem);","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\Post.jsx",["159"],"import React, { useState } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { Card, Button, Accordion, Form, Modal } from 'react-bootstrap'\r\nimport { BsHeart, BsChatSquare, BsHeartFill } from 'react-icons/bs'\r\nimport { GrBike } from 'react-icons/gr'\r\nimport { FaRunning } from 'react-icons/fa'\r\nimport { ImBin } from 'react-icons/im'\r\nimport Map from './Map';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { updateReaction, submitComment, removeComment, getPosts, getUserPosts } from '../redux/actions'\r\n\r\nfunction Post(props) {\r\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n\r\n    function getIcon(type) {\r\n        if (type === \"ride\") return <GrBike />;\r\n        else if (type === \"run\") return <FaRunning />;\r\n        else return \" \";\r\n    }\r\n\r\n    function updatePostsAfterAction() {\r\n        if (props.home) {\r\n            console.log(\"a\")\r\n            setTimeout(() => {\r\n                props.dispatch(getPosts(props.accesstoken));\r\n            }, 1000)\r\n        }\r\n        else {\r\n            console.log(\"b\")\r\n            setTimeout(() => {\r\n                props.dispatch(getUserPosts(props.accesstoken, props.selecteduser));\r\n            }, 1000)\r\n        }\r\n    }\r\n\r\n    const onCommentSubmit = (e) => {\r\n        e.preventDefault();\r\n        var formData = new FormData(e.target)\r\n        formData = Object.fromEntries(formData.entries())\r\n        props.dispatch(submitComment(props.accesstoken, formData, props.post.id))\r\n        updatePostsAfterAction();\r\n    }\r\n\r\n\r\n    function reactionClicked(postid) {\r\n        props.dispatch(updateReaction(props.accesstoken, postid))\r\n        updatePostsAfterAction();\r\n    }\r\n\r\n    function removeCommentClicked(commentid) {\r\n        props.dispatch(removeComment(props.accesstoken, props.post.id, commentid))\r\n        updatePostsAfterAction();\r\n        setShowDeleteModal(false)\r\n    }\r\n\r\n    return (\r\n        <Card className=\"m-3\">\r\n            <Card.Body>\r\n                <Map height=\"500px\" mapId={uuidv4()} workout={props.post}/>\r\n                <Card.Title>{getIcon(props.post.type)} {props.post.name}</Card.Title>\r\n                <Card.Text className=\"mx-3\">\r\n                {props.post.user.firstName} {props.post.user.lastName}\r\n                </Card.Text>\r\n            </Card.Body>\r\n            <Accordion>\r\n                <Card>\r\n                    <Card.Header className=\"d-flex justify-content-between\">\r\n                        <Accordion.Toggle as={Button} variant=\"none\" eventKey=\"0\">\r\n                            <BsChatSquare /> {props.comments[props.post.id] === undefined ? 0 : props.comments[props.post.id].length}\r\n                        </Accordion.Toggle>\r\n                        <Button variant=\"none\" onClick={() => reactionClicked(props.post.id)}>{props.reactions[props.post.id] !== undefined && props.reactions[props.post.id].some(e => e.user.id === props.user.id) ? <BsHeartFill /> : <BsHeart />} {props.post.reactionsNumber}</Button>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                        <div>\r\n                            {props.comments[props.post.id] === undefined ? <div></div> : props.comments[props.post.id].map((c, cidx) => (\r\n                                <Card key={cidx} className=\"m-3 bg-light\">\r\n                                    <Card.Body>\r\n\r\n                                        <Card.Title>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-10\">\r\n                                                    <small className=\"text-muted\">{c.user.firstName} {c.user.lastName}</small>\r\n                                                </div>\r\n                                                <div className=\"col-2 text-right\">\r\n                                                    {props.user.id === c.user.id ? <ImBin color=\"red\" size=\"20px\" onClick={() => setShowDeleteModal(true)} /> : <div></div>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </Card.Title>\r\n                                        <Card.Text className=\"mx-3\">{c.text}</Card.Text>\r\n                                    </Card.Body>\r\n\r\n                                    <Modal show={showDeleteModal} onHide={() => setShowDeleteModal(false)}>\r\n                                        <Modal.Header closeButton>\r\n                                            <Modal.Title>Czy na pewno chcesz usunÄ…Ä‡ komentarz? </Modal.Title>\r\n                                        </Modal.Header>\r\n                                        <div>\r\n                                            <Modal.Body>\r\n                                                Komentarz zostanie bezpowrotnie usuniÄ™ty.\r\n                                            </Modal.Body>\r\n\r\n                                            <Modal.Footer>\r\n                                                <Button variant=\"secondary\" onClick={() => setShowDeleteModal(false)}>Anuluj</Button>\r\n                                                <Button variant=\"primary\" onClick={() => removeCommentClicked(c.id)}>Tak</Button>\r\n                                            </Modal.Footer>\r\n                                        </div>\r\n                                    </Modal>\r\n                                </Card>\r\n\r\n                            ))}\r\n                            <Form onSubmit={onCommentSubmit} className=\"m-3\">\r\n                                <Form.Group controlId={props.post.id}>\r\n                                    <Form.Control as=\"textarea\" name=\"text\" rows={3} placeholder=\"Dodaj komentarz\" required />\r\n                                </Form.Group>\r\n                                <div className=\"d-flex justify-content-end\">\r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        Skomentuj\r\n                                    </Button>\r\n                                </div>\r\n                            </Form>\r\n                        </div>\r\n                    </Accordion.Collapse>\r\n\r\n                </Card>\r\n            </Accordion>\r\n        </Card>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return state;\r\n}\r\n\r\nexport default Post = connect(mapStateToProps)(Post);\r\n\r\n","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\account\\AccountInfoTable.jsx",["160","161"],"import React, { useState } from 'react';\r\nimport { Card, Button, Table, Form, Col } from 'react-bootstrap';\r\nimport { Pencil } from 'react-bootstrap-icons';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport { connect } from 'react-redux'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nimport {removeUser, cleanRegistered} from '../../redux/actions'\r\nimport EditProfileModal from './AccountEdit'\r\nimport '../../styles/account/AccountInfoTable.css'\r\n\r\nfunction AccountInfoTable(props) {\r\n    const history = useHistory();\r\n    const { user, logout } = useAuth0();\r\n    const [modalTitle, setModalTitle] = useState();\r\n    const [modalForm, setModalForm] = useState();\r\n    const [modalURL, setModalURL] = useState();\r\n\r\n    const [showEditModal, setShowEditModal] = useState(false);\r\n    const handleShowEditModal = () => setShowEditModal(true);\r\n    const handleCloseEditModal = () => setShowEditModal(false);\r\n\r\n    const setModalForName = () => {\r\n        setModalTitle(\"Edytuj swoje imiÄ™ i nazwisko\")\r\n        setModalURL(\"http://localhost:5000/account/change/name\")\r\n        setModalForm(\r\n            <div>\r\n                <Form.Group controlId=\"formBasicFirstname\">\r\n                    <Form.Control type=\"text\" name='firstName' placeholder=\"Podaj nowe imiÄ™\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicSurname\">\r\n                    <Form.Control type=\"text\" name='lastName' placeholder=\"Podaj nowe nazwisko\" />\r\n                </Form.Group>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const setModalForDateOfBirth = () => {\r\n        setModalTitle(\"Edytuj swojÄ… datÄ™ urodzenia\")\r\n        setModalURL(\"http://localhost:5000/account/change/dateOfBirth\")\r\n        setModalForm(\r\n            <div>\r\n                <Form.Group controlId=\"formBasicDateOfBirth\">\r\n                    <Form.Control type=\"date\" name='birthDate' placeholder=\"Podaj datÄ™ urodzenia\" />\r\n                </Form.Group>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    const deleteUser = (e) => {\r\n        props.dispatch(removeUser(props.accesstoken))\r\n        sessionStorage.removeItem('isRegistered')\r\n        logout({ returnTo: window.location.origin })\r\n        history.push(\"/\")\r\n    }\r\n\r\n    return (\r\n        <Col xl={10}>\r\n            {user &&\r\n                <EditProfileModal\r\n                    showEditModal={showEditModal}\r\n                    handleCloseEditModal={handleCloseEditModal}\r\n                    title={modalTitle}\r\n                    form={modalForm}\r\n                    modalURL={modalURL}\r\n                    email={user.email} />\r\n            }\r\n                <Card className=\"text-center\">\r\n                    <Card.Header>Profil</Card.Header>\r\n                    <Card.Body >\r\n                        <Card.Title className=\"text-left\">Twoje informacje</Card.Title>\r\n                        <Table striped className=\"text-left\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>ImiÄ™ i nazwisko</td>\r\n                                    <td>{props.user.firstName} {props.user.lastName}</td>\r\n                                    <td>\r\n                                        <Button className=\"pencil_table_ico\" variant=\"light\" onClick={() => {\r\n                                            setModalForName();\r\n                                            handleShowEditModal();\r\n                                        }}>\r\n                                            <Pencil color=\"brown\" size={20} />\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Data urodzenia</td>\r\n                                    <td>{props.user.birthDate}</td>\r\n                                    <td>\r\n                                        <Button className=\"pencil_table_ico\" variant=\"light\" onClick={() => {\r\n                                            setModalForDateOfBirth();\r\n                                            handleShowEditModal();\r\n                                        }}>\r\n                                            <Pencil color=\"brown\" size={20} />\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Adres e-mail</td>\r\n                                    <td colSpan=\"2\">{props.user.email}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                        <Button \r\n                            variant=\"outline-danger\" \r\n                            onClick={deleteUser}>\r\n                            UsuÅ„ konto\r\n                        </Button>{/* DodaÄ‡ usuwanie usera */}\r\n                    </Card.Footer>\r\n                </Card>\r\n        </Col>\r\n    )\r\n}\r\nfunction mapStateToProps(state) {\r\n    return state\r\n}\r\n\r\nexport default AccountInfoTable = connect(mapStateToProps)(AccountInfoTable)\r\n","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\hooks\\useConnection.jsx",[],"D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\account\\AccountEdit.jsx",["162"],"import {connect} from 'react-redux'\r\nimport { getUser } from '../../redux/actions'\r\nimport { Button, Modal, Form } from 'react-bootstrap'\r\nimport {updateUser} from '../../redux/actions'\r\n\r\nfunction AccountEdit(props) {\r\n\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    var formData = new FormData(e.target)\r\n    formData = Object.fromEntries(formData.entries())\r\n    props.dispatch(updateUser(props.accesstoken, formData))\r\n    setTimeout(() => {\r\n      props.dispatch(getUser(props.accesstoken));\r\n    }, 1000)\r\n    props.handleCloseEditModal();\r\n  }\r\n\r\n  return (\r\n    <Modal show={props.showEditModal} onHide={props.handleCloseEditModal} onSubmit={onFormSubmit}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{props.title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          {props.form}\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={props.handleCloseEditModal}>\r\n              Zamknij\r\n          </Button>\r\n            <Button type=\"submit\" variant=\"success\">\r\n              ZatwierdÅº\r\n          </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return state\r\n}\r\n\r\nexport default AccountEdit = connect(mapStateToProps)(AccountEdit)","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\Map.jsx",["163","164","165","166","167","168"],"import { useEffect, useState, useRef } from \"react\"\r\nimport useScript from \"../hooks/useScript\";\r\n\r\nexport default function Map({ height, mapId, workout }) {\r\n\r\n    const [map, setMap] = useState();\r\n    const [gpx, setGpx] = useState();\r\n    const [width, setWidth] = useState();\r\n\r\n    const ref = useRef(null);\r\n    const L = window.L;\r\n\r\n    let status = useScript(\r\n        \"https://cdnjs.cloudflare.com/ajax/libs/leaflet-gpx/1.5.1/gpx.min.js\"\r\n    );\r\n\r\n    useEffect(() => {\r\n        setWidth(ref.current.clientHeight);\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (map) {\r\n            map.invalidateSize()\r\n            if (gpx) {\r\n                try {\r\n                    map.fitBounds(gpx.getBounds());\r\n                } catch (error) {\r\n                    console.error(error);\r\n                }\r\n            }\r\n        }\r\n    }, [width])\r\n\r\n\r\n    useEffect(() => {\r\n        if (status === \"ready\") {\r\n            removeMap();\r\n            init();\r\n        }\r\n    }, [status]);\r\n\r\n    function removeMap() {\r\n        const container = L.DomUtil.get('map-' + mapId);\r\n        if (container != null) {\r\n            container._leaflet_id = null;\r\n        }\r\n    }\r\n\r\n    function getMapboxMapLayer(id) {\r\n        return L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}',\r\n            {\r\n                id: id,\r\n                attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, Imagery Â© <a href=\"https://www.mapbox.com/\">Mapbox</a>',\r\n                tileSize: 512,\r\n                zoomOffset: -1,\r\n                accessToken: process.env.REACT_APP_MAPBOX_ACCESS_TOKEN\r\n            })\r\n    }\r\n\r\n    function init() {\r\n        const attribution = '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors';\r\n\r\n        const layers = {\r\n            \"osm\": L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\r\n                {\r\n                    id: 'osm',\r\n                    attribution: attribution\r\n                }),\r\n            \"cyclosm\": L.tileLayer(\"https://{s}.tile-cyclosm.openstreetmap.fr/cyclosm/{z}/{x}/{y}.png\",\r\n                {\r\n                    id: 'cyclosm',\r\n                    attribution: attribution\r\n                }),\r\n            \"mapbox-outdoors\": getMapboxMapLayer('mapbox/outdoors-v11'),\r\n            \"mapbox-streets\": getMapboxMapLayer('mapbox/streets-v11'),\r\n            \"mapbox-satellite\": getMapboxMapLayer('mapbox/satellite-v9')\r\n        }\r\n\r\n        let localMap = L.map(\"map-\" + mapId, {\r\n            center: [52.250036800, 21.0136778263],\r\n            zoom: 12,\r\n            layers: [layers[\"osm\"]],\r\n        });\r\n\r\n        localMap.zoomControl.setPosition('bottomright');\r\n\r\n        setMap(localMap);\r\n\r\n        var baseMaps = {\r\n            \"OpenStreetMap\": layers[\"osm\"],\r\n            \"CyclOSM\": layers[\"cyclosm\"],\r\n            \"Mapbox Outdoors\": layers[\"mapbox-outdoors\"],\r\n            \"Mapbox Streets\": layers[\"mapbox-streets\"],\r\n            \"Mapbox Satellite\": layers[\"mapbox-satellite\"]\r\n        };\r\n\r\n        L.control.layers(baseMaps, null, {position: 'topleft'}).addTo(localMap);\r\n        L.control.scale().addTo(localMap);\r\n\r\n        if (workout.gpxUrl) {\r\n            loadGPX(workout.gpxUrl, localMap);\r\n        }\r\n    }\r\n\r\n    function loadGPX(path, map) {\r\n        let newGpx = new L.GPX(path, {\r\n            async: true,\r\n            marker_options: {\r\n                startIconUrl: process.env.PUBLIC_URL + '/leaflet/pin-icon-start.png',\r\n                endIconUrl: process.env.PUBLIC_URL + '/leaflet/pin-icon-end.png',\r\n                shadowUrl: process.env.PUBLIC_URL + '/leaflet/pin-shadow.png'\r\n            }\r\n        })\r\n\r\n        newGpx.on('loaded', function (e) {\r\n            map.fitBounds(e.target.getBounds());\r\n        })\r\n        newGpx.addTo(map);\r\n\r\n        setGpx(newGpx);\r\n    }\r\n\r\n    function getDistance() {\r\n        return Math.round(gpx.get_distance() / 10) / 100\r\n    }\r\n\r\n\r\n    function getTime() {\r\n        return new Date(gpx.get_total_time())\r\n            .toISOString()\r\n            .slice(11, -1)\r\n            .split(\".\")[0]\r\n    }\r\n\r\n    function getAverageSpeed() {\r\n        const kms = gpx.get_distance() / 1000;\r\n        const hours = gpx.get_total_time() / (1000 * 60 * 60);\r\n        return Math.round(kms / hours * 100) / 100;\r\n    }\r\n\r\n    function round(number, places) {\r\n        const p = Math.pow(10, places);\r\n        return Math.round(number * p) / p;\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div id={\"map-\" + mapId} ref={ref} style={{ height: height }}></div>\r\n            {\r\n                gpx &&\r\n                <ul className=\"list-group list-group-horizontal mb-3 d-flex\">\r\n                    <li className=\"list-group-item flex-fill\">Dystans: {round(workout.workoutStats.totalDistance, 2)} km</li>\r\n                    <li className=\"list-group-item flex-fill\">Czas: {workout.workoutStats.timeString}</li>\r\n                    <li className=\"list-group-item flex-fill\">Åšrednia prÄ™dkoÅ›Ä‡: {round(workout.workoutStats.averageSpeed, 2)} km/h</li>\r\n                    <li className=\"list-group-item flex-fill\">Kalorie: {workout.workoutStats.caloriesBurnedEstimate} kcal</li>\r\n                </ul>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nMap.defaultProps = {\r\n    height: \"500px\"\r\n};","D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\hooks\\useScript.jsx",[],"D:\\Users\\jkbz2\\Documents\\GitHub\\KalSpal\\frontend\\src\\components\\FindWorkout.jsx",["169","170","171","172","173"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { Col, Container, Row, Card, Form, Button } from \"react-bootstrap\"\r\nimport useScript from \"../hooks/useScript\";\r\nimport {getFindWorkout} from \"../redux/actions\"\r\nimport Map from './Map';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction FindWorkout(props) {\r\n    const mapId = 1\r\n    const height = \"500px\"\r\n    const [map, setMap] = useState();\r\n    const [width, setWidth] = useState();\r\n    const [lat, setLat] = useState(\"\");\r\n    const [lng, setLng] = useState(\"\");\r\n\r\n    const ref = useRef(null);\r\n    const L = window.L;\r\n\r\n    let status = useScript(\r\n        \"https://cdnjs.cloudflare.com/ajax/libs/leaflet-gpx/1.5.1/gpx.min.js\"\r\n    );\r\n\r\n    useEffect(() => {\r\n        setWidth(ref.current.clientHeight);\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (map) {\r\n            map.invalidateSize()\r\n        }\r\n    }, [width])\r\n\r\n\r\n    useEffect(() => {\r\n        if (status === \"ready\") {\r\n            removeMap();\r\n            init();\r\n        }\r\n    }, [status]);\r\n\r\n    function removeMap() {\r\n        const container = L.DomUtil.get('map-' + mapId);\r\n        if (container != null) {\r\n            container._leaflet_id = null;\r\n        }\r\n    }\r\n\r\n    function getMapboxMapLayer(id) {\r\n        return L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}',\r\n            {\r\n                id: id,\r\n                attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, Imagery Â© <a href=\"https://www.mapbox.com/\">Mapbox</a>',\r\n                tileSize: 512,\r\n                zoomOffset: -1,\r\n                accessToken: process.env.REACT_APP_MAPBOX_ACCESS_TOKEN\r\n            })\r\n    }\r\n\r\n    function getMapboxMapLayer(id) {\r\n        return L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}',\r\n            {\r\n                id: id,\r\n                attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, Imagery Â© <a href=\"https://www.mapbox.com/\">Mapbox</a>',\r\n                tileSize: 512,\r\n                zoomOffset: -1,\r\n                accessToken: process.env.REACT_APP_MAPBOX_ACCESS_TOKEN\r\n            })\r\n    }\r\n\r\n    function init() {\r\n        const attribution = '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors';\r\n\r\n        const layers = {\r\n            \"osm\": L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\r\n                {\r\n                    id: 'osm',\r\n                    attribution: attribution\r\n                }),\r\n            \"cyclosm\": L.tileLayer(\"https://{s}.tile-cyclosm.openstreetmap.fr/cyclosm/{z}/{x}/{y}.png\",\r\n                {\r\n                    id: 'cyclosm',\r\n                    attribution: attribution\r\n                }),\r\n            \"mapbox-outdoors\": getMapboxMapLayer('mapbox/outdoors-v11'),\r\n            \"mapbox-streets\": getMapboxMapLayer('mapbox/streets-v11'),\r\n            \"mapbox-satellite\": getMapboxMapLayer('mapbox/satellite-v9')\r\n        }\r\n\r\n        let localMap = L.map(\"map-\" + mapId, {\r\n            center: [52.250036800, 21.0136778263],\r\n            zoom: 12,\r\n            layers: [layers[\"osm\"]],\r\n        });\r\n\r\n        var marker;\r\n        localMap.on('click', function (e) {\r\n            if (marker)\r\n                localMap.removeLayer(marker);\r\n            marker = L.marker(e.latlng).addTo(localMap);\r\n            setLat(e.latlng.lat)\r\n            setLng(e.latlng.lng)\r\n\r\n        });\r\n\r\n        localMap.zoomControl.setPosition('bottomright');\r\n\r\n        setMap(localMap);\r\n\r\n        var baseMaps = {\r\n            \"OpenStreetMap\": layers[\"osm\"],\r\n            \"CyclOSM\": layers[\"cyclosm\"],\r\n            \"Mapbox Outdoors\": layers[\"mapbox-outdoors\"],\r\n            \"Mapbox Streets\": layers[\"mapbox-streets\"],\r\n            \"Mapbox Satellite\": layers[\"mapbox-satellite\"]\r\n        };\r\n\r\n        L.control.layers(baseMaps, null, { position: 'topleft' }).addTo(localMap);\r\n        L.control.scale().addTo(localMap);\r\n\r\n    }\r\n\r\n    const onFormSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (lat === \"\" || lng === \"\"){\r\n            alert(\"ProszÄ™ wybraÄ‡ punkt poczÄ…tkowy\")\r\n            return\r\n        }\r\n        var formData = new FormData(e.target)\r\n        formData = Object.fromEntries(formData.entries())\r\n        props.dispatch(getFindWorkout(props.accesstoken, formData))\r\n    }\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row className=\"justify-content-center\">\r\n                <Col xl={4}>\r\n                    <Card>\r\n                        <Card.Header>Wyszukaj trasÄ™</Card.Header>\r\n                        <Card.Body >\r\n                            <Row className=\"mx-3\">Wybierz punkt poczÄ…tkowy:</Row>\r\n                            <div>\r\n                                <div id={\"map-\" + mapId} ref={ref} style={{ height: height }}></div>\r\n                            </div>\r\n                            <Form onSubmit={onFormSubmit}>\r\n                                <Form.Group className=\"mx-3\">\r\n                                    <Form.Control type=\"hidden\" name=\"latitude\" value={lat} required></Form.Control>\r\n                                    <Form.Control type=\"hidden\" name=\"longitude\" value={lng} required></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mx-3\"> \r\n                                    <Form.Label>Dystans (w kilometrach):</Form.Label>\r\n                                    <Form.Control type=\"text\" name=\"distance\" required></Form.Control>\r\n                                </Form.Group >\r\n                                <Form.Group className=\"mx-3\">\r\n                                    <Form.Label>Maksymalna odlegÅ‚oÅ›Ä‡ od wybranego startu (w kilometrach):</Form.Label>\r\n                                    <Form.Control type=\"text\" name=\"range\" required></Form.Control>\r\n                                </Form.Group>\r\n                                <Button className=\"mx-3\" variant=\"primary\" type=\"submit\">ZnajdÅº trasÄ™</Button>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col xl={6}>\r\n                    <Card>\r\n                        <Card.Header>Najlepsza trasa</Card.Header>\r\n                        <Card.Body>\r\n                            {props.foundWorkout === undefined || props.foundWorkout.id === undefined ? <Row className=\"mx-3\">Tu pojawi siÄ™ znaleziona trasa</Row>: <Map height=\"500px\" mapId={uuidv4()} workout={props.foundWorkout}/>}\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return state;\r\n}\r\n\r\nexport default FindWorkout = connect(mapStateToProps)(FindWorkout);",{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":45,"column":6,"nodeType":"180","endLine":45,"endColumn":34,"suggestions":"181"},{"ruleId":"182","severity":1,"message":"183","line":91,"column":16,"nodeType":"184","messageId":"185","endLine":91,"endColumn":19},{"ruleId":"186","severity":1,"message":"187","line":10,"column":37,"nodeType":"188","endLine":10,"endColumn":122},{"ruleId":"178","severity":1,"message":"189","line":13,"column":8,"nodeType":"180","endLine":13,"endColumn":27,"suggestions":"190"},{"ruleId":"182","severity":1,"message":"191","line":45,"column":16,"nodeType":"184","messageId":"185","endLine":45,"endColumn":24},{"ruleId":"182","severity":1,"message":"192","line":77,"column":16,"nodeType":"184","messageId":"185","endLine":77,"endColumn":26},{"ruleId":"178","severity":1,"message":"193","line":23,"column":8,"nodeType":"180","endLine":23,"endColumn":18,"suggestions":"194"},{"ruleId":"178","severity":1,"message":"189","line":30,"column":8,"nodeType":"180","endLine":30,"endColumn":45,"suggestions":"195"},{"ruleId":"196","severity":1,"message":"197","line":35,"column":39,"nodeType":"198","messageId":"199","endLine":35,"endColumn":41},{"ruleId":"182","severity":1,"message":"200","line":155,"column":16,"nodeType":"184","messageId":"185","endLine":155,"endColumn":29},{"ruleId":"201","severity":1,"message":"202","line":5,"column":10,"nodeType":"184","messageId":"203","endLine":5,"endColumn":30},{"ruleId":"178","severity":1,"message":"189","line":17,"column":8,"nodeType":"180","endLine":17,"endColumn":27,"suggestions":"204"},{"ruleId":"182","severity":1,"message":"205","line":36,"column":16,"nodeType":"184","messageId":"185","endLine":36,"endColumn":34},{"ruleId":"201","severity":1,"message":"206","line":9,"column":20,"nodeType":"184","messageId":"203","endLine":9,"endColumn":30},{"ruleId":"201","severity":1,"message":"207","line":15,"column":8,"nodeType":"184","messageId":"203","endLine":15,"endColumn":19},{"ruleId":"178","severity":1,"message":"189","line":30,"column":8,"nodeType":"180","endLine":30,"endColumn":27,"suggestions":"208"},{"ruleId":"201","severity":1,"message":"209","line":45,"column":14,"nodeType":"184","messageId":"203","endLine":45,"endColumn":28},{"ruleId":"182","severity":1,"message":"210","line":207,"column":16,"nodeType":"184","messageId":"185","endLine":207,"endColumn":25},{"ruleId":"201","severity":1,"message":"207","line":8,"column":8,"nodeType":"184","messageId":"203","endLine":8,"endColumn":19},{"ruleId":"178","severity":1,"message":"189","line":20,"column":8,"nodeType":"180","endLine":20,"endColumn":27,"suggestions":"211"},{"ruleId":"212","severity":1,"message":"213","line":23,"column":77,"nodeType":"214","messageId":"215","endLine":23,"endColumn":79},{"ruleId":"182","severity":1,"message":"216","line":110,"column":16,"nodeType":"184","messageId":"185","endLine":110,"endColumn":20},{"ruleId":"178","severity":1,"message":"189","line":17,"column":8,"nodeType":"180","endLine":17,"endColumn":27,"suggestions":"217"},{"ruleId":"182","severity":1,"message":"218","line":37,"column":16,"nodeType":"184","messageId":"185","endLine":37,"endColumn":23},{"ruleId":"178","severity":1,"message":"219","line":37,"column":8,"nodeType":"180","endLine":37,"endColumn":20,"suggestions":"220"},{"ruleId":"182","severity":1,"message":"221","line":59,"column":16,"nodeType":"184","messageId":"185","endLine":59,"endColumn":29},{"ruleId":"182","severity":1,"message":"222","line":62,"column":16,"nodeType":"184","messageId":"185","endLine":62,"endColumn":31},{"ruleId":"182","severity":1,"message":"223","line":136,"column":16,"nodeType":"184","messageId":"185","endLine":136,"endColumn":20},{"ruleId":"201","severity":1,"message":"224","line":8,"column":21,"nodeType":"184","messageId":"203","endLine":8,"endColumn":36},{"ruleId":"182","severity":1,"message":"225","line":121,"column":16,"nodeType":"184","messageId":"185","endLine":121,"endColumn":32},{"ruleId":"182","severity":1,"message":"226","line":45,"column":16,"nodeType":"184","messageId":"185","endLine":45,"endColumn":27},{"ruleId":"178","severity":1,"message":"227","line":17,"column":5,"nodeType":"184","endLine":17,"endColumn":14,"suggestions":"228"},{"ruleId":"178","severity":1,"message":"229","line":32,"column":8,"nodeType":"180","endLine":32,"endColumn":15,"suggestions":"230"},{"ruleId":"178","severity":1,"message":"231","line":40,"column":8,"nodeType":"180","endLine":40,"endColumn":16,"suggestions":"232"},{"ruleId":"201","severity":1,"message":"233","line":123,"column":14,"nodeType":"184","messageId":"203","endLine":123,"endColumn":25},{"ruleId":"201","severity":1,"message":"234","line":128,"column":14,"nodeType":"184","messageId":"203","endLine":128,"endColumn":21},{"ruleId":"201","severity":1,"message":"235","line":135,"column":14,"nodeType":"184","messageId":"203","endLine":135,"endColumn":29},{"ruleId":"178","severity":1,"message":"227","line":24,"column":5,"nodeType":"184","endLine":24,"endColumn":14,"suggestions":"236"},{"ruleId":"178","severity":1,"message":"237","line":32,"column":8,"nodeType":"180","endLine":32,"endColumn":15,"suggestions":"238"},{"ruleId":"178","severity":1,"message":"231","line":40,"column":8,"nodeType":"180","endLine":40,"endColumn":16,"suggestions":"239"},{"ruleId":"240","severity":1,"message":"241","line":60,"column":14,"nodeType":"184","messageId":"242","endLine":60,"endColumn":31},{"ruleId":"182","severity":1,"message":"243","line":180,"column":16,"nodeType":"184","messageId":"185","endLine":180,"endColumn":27},"no-native-reassign",["244"],"no-negated-in-lhs",["245"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getAccessTokenSilently' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["246"],"no-func-assign","'App' is a function.","Identifier","isAFunction","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["247"],"'Workouts' is a function.","'CreateUser' is a function.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["248"],["249"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'DefaultNavbar' is a function.","no-unused-vars","'useCheckAvailAccount' is defined but never used.","unusedVar",["250"],"'RedirectAfterLogin' is a function.","'BsCalendar' is defined but never used.","'placeholder' is defined but never used.",["251"],"'meetingClicked' is defined but never used.","'Dashboard' is a function.",["252"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'User' is a function.",["253"],"'Account' is a function.","React Hook useEffect has a missing dependency: 'getAvatar'. Either include it or remove the dependency array.",["254"],"'AccountAvatar' is a function.","'WorkoutListItem' is a function.","'Post' is a function.","'cleanRegistered' is defined but never used.","'AccountInfoTable' is a function.","'AccountEdit' is a function.","React Hook useEffect contains a call to 'setWidth'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["255"],"React Hook useEffect has missing dependencies: 'gpx' and 'map'. Either include them or remove the dependency array.",["256"],"React Hook useEffect has missing dependencies: 'init' and 'removeMap'. Either include them or remove the dependency array.",["257"],"'getDistance' is defined but never used.","'getTime' is defined but never used.","'getAverageSpeed' is defined but never used.",["258"],"React Hook useEffect has a missing dependency: 'map'. Either include it or remove the dependency array.",["259"],["260"],"no-redeclare","'getMapboxMapLayer' is already defined.","redeclared","'FindWorkout' is a function.","no-global-assign","no-unsafe-negation",{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"263","fix":"269"},{"desc":"263","fix":"270"},{"desc":"263","fix":"271"},{"desc":"263","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"275","fix":"281"},{"desc":"282","fix":"283"},{"desc":"279","fix":"284"},"Update the dependencies array to be: [isLoading, isAuthenticated, props, getAccessTokenSilently]",{"range":"285","text":"286"},"Update the dependencies array to be: [props, props.accesstoken]",{"range":"287","text":"288"},"Update the dependencies array to be: [history, selected]",{"range":"289","text":"290"},"Update the dependencies array to be: [props, props.accesstoken, props.registered]",{"range":"291","text":"292"},{"range":"293","text":"288"},{"range":"294","text":"288"},{"range":"295","text":"288"},{"range":"296","text":"288"},"Update the dependencies array to be: [getAvatar, props.user]",{"range":"297","text":"298"},"Add dependencies array: []",{"range":"299","text":"300"},"Update the dependencies array to be: [gpx, map, width]",{"range":"301","text":"302"},"Update the dependencies array to be: [init, removeMap, status]",{"range":"303","text":"304"},{"range":"305","text":"300"},"Update the dependencies array to be: [map, width]",{"range":"306","text":"307"},{"range":"308","text":"304"},[1661,1689],"[isLoading, isAuthenticated, props, getAccessTokenSilently]",[461,480],"[props, props.accesstoken]",[901,911],"[history, selected]",[1153,1190],"[props, props.accesstoken, props.registered]",[551,570],[1179,1198],[779,798],[500,519],[1223,1235],"[getAvatar, props.user]",[533,533],", []",[845,852],"[gpx, map, width]",[982,990],"[init, removeMap, status]",[830,830],[930,937],"[map, width]",[1067,1075]]